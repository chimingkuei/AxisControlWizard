<UserControl x:Class="DeepWise.Expression.VariableView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DeepWise.Expression"
        xmlns:UI="clr-namespace:DeepWise.Controls"
        mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="34"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
         <ToolBar>
            <ToolBar.Resources>
                <Style TargetType="Image">
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <UI:ObjectIsNotEmptyToBooleanConverter x:Key="isNotEmptyConverter"/>
            </ToolBar.Resources>
            <Button x:Name="btn_New" ToolTip="新增" Click="Button_Click" Margin="4,0" Cursor="Hand"  >
                <Image  Stretch="None" Width="24" Height="24" Source="/dw_base;component/Resources/baseline_note_add_black_24dp.png"/>
            </Button>
            <Button x:Name="btn_Rename" ToolTip="重新命名" Click="Button_Click" IsEnabled="{Binding Path=SelectedItem,ElementName=dataGrid,Converter={StaticResource isNotEmptyConverter}}" Margin="4,0" Cursor="Hand">
                
                <Image Source="/dw_base;component/Resources/baseline_drive_file_rename_outline_black_24dp.png" Stretch="None"></Image>
            </Button>
            <Button x:Name="btn_Copy" ToolTip="複製" Click="Button_Click"  IsEnabled="{Binding SelectedItem, Converter={StaticResource isNotEmptyConverter}, ElementName=dataGrid}" Margin="4,0" Cursor="Hand">
                <Image Source="/dw_base;component/Resources/baseline_file_copy_black_24dp.png" Stretch="None"/>
            </Button>
            <Button x:Name="btn_Delete" ToolTip="刪除" Click="Button_Click" IsEnabled="{Binding Path=SelectedItem,ElementName=dataGrid,Converter={StaticResource isNotEmptyConverter}}" Margin="4,0" Cursor="Hand">
                <Image Source="/dw_base;component/Resources/baseline_delete_black_24dp.png" Stretch="None"></Image>
            </Button>
        </ToolBar>
        <DataGrid x:Name="dataGrid" Grid.Row="1" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False">
            <DataGrid.Resources>
                <local:TypeNameConverter x:Key="cvt_typeName"/>
                <Style TargetType="{x:Type TextBox}" x:Key="CheckBoxStyle">
                    <Style.Resources>
                        <local:TypeBoolConverter x:Key="cvt_typeBool"/>
                    </Style.Resources>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ValueType, Converter={StaticResource cvt_typeBool}}" Value="False">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Type" Binding="{Binding ValueType, Converter={StaticResource cvt_typeName}, Mode=OneWay}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Value" Binding="{Binding Value}" EditingElementStyle="{StaticResource CheckBoxStyle}"/>
                <DataGridTextColumn Header="DefaultValue" Binding="{Binding DefaultValue}" EditingElementStyle="{StaticResource CheckBoxStyle}"/>
            </DataGrid.Columns>
        </DataGrid>
        <!--<ListBox x:Name="dataGrid" Grid.Row="1" >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="IsHitTestVisible" Value="False" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor,  AncestorType={x:Type ListBoxItem}, AncestorLevel=1}}"  Value="True">
                                        <Setter Property="IsHitTestVisible" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Text="{Binding Name}" Width="120" Margin="5,2"/>
                        <TextBlock Text="{Binding ValueType.Name}" Width="80" Margin="5,2" GotFocus="TextBlock_GotFocus"/>
                        <TextBox Text="{Binding Value}" Width="120" Margin="5,2" />
                        <TextBox Text="{Binding DefaultValue}" Width="120" Margin="5,2"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate> 
        </ListBox>-->
    </Grid>
</UserControl>
