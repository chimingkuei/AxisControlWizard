<UserControl x:Class="DeepWise.Controls.PropertyGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DeepWise.Controls"
             d:Width="300" d:Height="400"
             x:Name="this"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="cvt_b2v"/>
            <local:CheckBoxSizeConverter x:Key="cvt_chk"/>
            <SolidColorBrush x:Key="NormalBrush" Color="Transparent"/>
            <SolidColorBrush x:Key="NormalBorderBrush" Color="#646464"/>
            <SolidColorBrush x:Key="GlyphBrush" Color="#242424"/>
            <SolidColorBrush x:Key="DarkBrush"  Color="#484848"/>
            <SolidColorBrush x:Key="PressedBrush" Color="#4878D7"/>
            <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#646464"/>
            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <StackPanel Orientation="Horizontal" Name="stackPnl" Background="Transparent">
                                <RadioButton Style="{x:Null}" IsHitTestVisible="False"  VerticalAlignment="Center" IsChecked="{TemplateBinding IsChecked}"  Width="{TemplateBinding ActualHeight}" x:Name="innerChk" >
                                    <RadioButton.RenderTransformOrigin>
                                        <Point X="0" Y="0.5"/>
                                    </RadioButton.RenderTransformOrigin>
                                    <RadioButton.RenderTransform>
                                        <ScaleTransform   ScaleX="{Binding ActualHeight,Converter={StaticResource cvt_chk},ElementName=stackPnl}" ScaleY="{Binding ActualHeight,Converter={StaticResource cvt_chk},ElementName=stackPnl}"/>
                                    </RadioButton.RenderTransform>
                                </RadioButton>
                                <TextBlock Text="{TemplateBinding Content}"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <StackPanel Orientation="Horizontal" Name="stackPnl" Background="Transparent">
                                <CheckBox Style="{x:Null}" IsHitTestVisible="False"  VerticalAlignment="Center" IsChecked="{TemplateBinding IsChecked}"  Width="{TemplateBinding ActualHeight}" x:Name="innerChk" >
                                    <CheckBox.RenderTransformOrigin>
                                        <Point X="0" Y="0.5"/>
                                    </CheckBox.RenderTransformOrigin>
                                    <CheckBox.RenderTransform>
                                        <ScaleTransform   ScaleX="{Binding ActualHeight,Converter={StaticResource cvt_chk},ElementName=stackPnl}" ScaleY="{Binding ActualHeight,Converter={StaticResource cvt_chk},ElementName=stackPnl}"/>
                                    </CheckBox.RenderTransform>
                                </CheckBox>
                                <TextBlock Text="{TemplateBinding Content}"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
        <!--<Style TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            --><!--<Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisual}"/>--><!--
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
              Height="{Binding ActualHeight, ElementName=PART_Content}" >
                                    <Ellipse x:Name="Border"  
                Fill="{StaticResource NormalBrush}"
                StrokeThickness="1"
                Stroke="{StaticResource NormalBorderBrush}" />
                                    <Ellipse x:Name="CheckMark" Margin="4" Fill="{StaticResource GlyphBrush}" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Name="PART_Content" Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Fill" Value="{StaticResource DarkBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Fill" Value="{StaticResource PressedBrush}" />
                                <Setter TargetName="Border" Property="Stroke" Value="{StaticResource GlyphBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Fill" Value="{StaticResource DisabledBackgroundBrush}" />
                                <Setter TargetName="Border" Property="Stroke" Value="#40000000" />
                                <Setter Property="Foreground" Value="#80000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

     
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Width" Value="16"/>
                    <Setter Property="Height" Value="16"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Margin" Value="4,4,0,4"/>
                </Style>
            </StackPanel.Resources>
        </StackPanel>
        <ScrollViewer HorizontalScrollBarVisibility="Disabled"  Grid.Row="1" VerticalScrollBarVisibility="Auto">
            
        <ItemsControl  x:Name="listBox" DataContext="{Binding SelectedObject,ElementName=this}" >
            <ItemsControl.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Expander IsExpanded="True">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Name}" FontWeight="Bold" VerticalAlignment="Bottom" />
                                                    <TextBlock Text="(" Foreground="Gray"  Margin="10,0,0,0" VerticalAlignment="Center" />
                                                    <TextBlock Text="{Binding ItemCount}" Foreground="Gray"  VerticalAlignment="Center" />
                                                    <TextBlock Text=")" Foreground="Gray"  VerticalAlignment="Center" />
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ItemsControl.GroupStyle>
        </ItemsControl>
        </ScrollViewer>
    </Grid>
</UserControl>
